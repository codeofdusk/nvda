#appModules/mmc.py#A part of NonVisual Desktop Access (NVDA)#Copyright (C) 2006-2019 NVDA Contributors, David Parduhn, Bill Dengler#This file is covered by the GNU General Public License.#See the file COPYING for more details.import appModuleHandlerimport controlTypesimport uifrom NVDAObjects.IAccessible import IAccessibleclass MMCTable(IAccessible):	"A custom overlay object class for tables in MMC, such as disk management's graphical view."	def script_getcurrentobject(self, gesture):		"#1486: workaround to read tables in MMC, such as the disk management graphical view."		gesture.send()		for i in self.children:			if controlTypes.STATE_SELECTED in i.states:				ui.message(i.name + ' ' + i.value)	__tableReviewGestures = (		"kb:rightarrow",		"kb:leftarrow",		"kb:uparrow",		"kb:downarrow",	)	def initOverlayClass(self):		"Initializes MMCTable objects."		# #1486: bind the arrow keys to our custom script		for i in self.__tableReviewGestures:			self.bindGesture(i, "getcurrentobject")class AppModule(appModuleHandler.AppModule):	"An MMC app module."	def chooseNVDAObjectOverlayClasses(self, obj, clsList):		"Binds application objects to their corresponding custom NVDA classes."		if obj.role == controlTypes.ROLE_TABLE:			clsList.insert(0, MMCTable)